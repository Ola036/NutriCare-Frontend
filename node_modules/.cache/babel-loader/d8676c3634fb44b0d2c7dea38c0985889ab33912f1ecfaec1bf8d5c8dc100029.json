{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaah\\\\Downloads\\\\project\\\\src\\\\components\\\\User\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport api from '../services/api';\nimport { ENDPOINTS } from '../config/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  const {\n    user,\n    setUser\n  } = useUser(); // Ensure you can access and update the user data\n  const [formData, setFormData] = useState({\n    name: (user === null || user === void 0 ? void 0 : user.name) || '',\n    email: (user === null || user === void 0 ? void 0 : user.email) || '',\n    password: '',\n    healthConditions: (user === null || user === void 0 ? void 0 : user.health_conditions) || [],\n    dietaryPreferences: (user === null || user === void 0 ? void 0 : user.dietary_preferences) || []\n  });\n  const [healthOptions, setHealthOptions] = useState([]);\n  const [dietaryOptions, setDietaryOptions] = useState([]);\n  useEffect(() => {\n    // Fetch health and dietary options from the backend\n    api({\n      url: ENDPOINTS.USER.DATA,\n      method: 'GET',\n      onSuccess: data => {\n        setHealthOptions(data.health);\n        setDietaryOptions(data.dietary);\n      },\n      onError: error => {\n        console.error('Error fetching data options:', error);\n      }\n    });\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSaveChanges = () => {\n    api({\n      url: ENDPOINTS.USER.UPDATE_INFO,\n      method: 'PUT',\n      body: formData,\n      onSuccess: updatedData => {\n        setUser(updatedData); // Update the UserContext\n        console.log('User updated successfully');\n      },\n      onError: error => {\n        console.error('Error updating user:', error);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url('/Image/background.svg')`,\n      padding: '2rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter new password\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Health Conditions:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"healthConditions\",\n          multiple: true,\n          value: formData.healthConditions,\n          onChange: e => setFormData({\n            ...formData,\n            healthConditions: Array.from(e.target.selectedOptions, opt => opt.value)\n          }),\n          children: healthOptions.map(condition => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: condition,\n            children: condition\n          }, condition, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Dietary Preferences:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"dietaryPreferences\",\n          multiple: true,\n          value: formData.dietaryPreferences,\n          onChange: e => setFormData({\n            ...formData,\n            dietaryPreferences: Array.from(e.target.selectedOptions, opt => opt.value)\n          }),\n          children: dietaryOptions.map(preference => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: preference,\n            children: preference\n          }, preference, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","useEffect","useUser","api","ENDPOINTS","jsxDEV","_jsxDEV","Profile","user","setUser","formData","setFormData","name","email","password","healthConditions","health_conditions","dietaryPreferences","dietary_preferences","healthOptions","setHealthOptions","dietaryOptions","setDietaryOptions","url","USER","DATA","method","onSuccess","data","health","dietary","onError","error","console","handleInputChange","e","value","target","handleSaveChanges","UPDATE_INFO","body","updatedData","log","style","backgroundImage","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","multiple","Array","from","selectedOptions","opt","map","condition","preference","onClick"],"sources":["C:/Users/olaah/Downloads/project/src/components/User/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useUser } from '../contexts/UserContext';\nimport api from '../services/api';\nimport { ENDPOINTS } from '../config/constants';\n\nexport default function Profile() {\n  const { user, setUser } = useUser(); // Ensure you can access and update the user data\n  const [formData, setFormData] = useState({\n    name: user?.name || '',\n    email: user?.email || '',\n    password: '',\n    healthConditions: user?.health_conditions || [],\n    dietaryPreferences: user?.dietary_preferences || [],\n  });\n  const [healthOptions, setHealthOptions] = useState([]);\n  const [dietaryOptions, setDietaryOptions] = useState([]);\n\n  useEffect(() => {\n    // Fetch health and dietary options from the backend\n    api({\n      url: ENDPOINTS.USER.DATA,\n      method: 'GET',\n      onSuccess: (data) => {\n        setHealthOptions(data.health);\n        setDietaryOptions(data.dietary);\n      },\n      onError: (error) => {\n        console.error('Error fetching data options:', error);\n      },\n    });\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSaveChanges = () => {\n    api({\n      url: ENDPOINTS.USER.UPDATE_INFO,\n      method: 'PUT',\n      body: formData,\n      onSuccess: (updatedData) => {\n        setUser(updatedData); // Update the UserContext\n        console.log('User updated successfully');\n      },\n      onError: (error) => {\n        console.error('Error updating user:', error);\n      },\n    });\n  };\n\n  return (\n    <div style={{ backgroundImage: `url('/Image/background.svg')`, padding: '2rem' }}>\n      <form>\n        <h2>User Information</h2>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter new password\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Health Conditions:\n          <select\n            name=\"healthConditions\"\n            multiple\n            value={formData.healthConditions}\n            onChange={(e) =>\n              setFormData({\n                ...formData,\n                healthConditions: Array.from(e.target.selectedOptions, (opt) => opt.value),\n              })\n            }\n          >\n            {healthOptions.map((condition) => (\n              <option key={condition} value={condition}>\n                {condition}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Dietary Preferences:\n          <select\n            name=\"dietaryPreferences\"\n            multiple\n            value={formData.dietaryPreferences}\n            onChange={(e) =>\n              setFormData({\n                ...formData,\n                dietaryPreferences: Array.from(e.target.selectedOptions, (opt) => opt.value),\n              })\n            }\n          >\n            {dietaryOptions.map((preference) => (\n              <option key={preference} value={preference}>\n                {preference}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button type=\"button\" onClick={handleSaveChanges}>\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}